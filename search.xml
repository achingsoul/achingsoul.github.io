<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[字符集与字符编码]]></title>
      <url>https://achingsoul.github.io/2017/03/26/%E5%AD%97%E7%AC%A6%E9%9B%86%E4%B8%8E%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81/</url>
      <content type="html"><![CDATA[<h3 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h3><p>学习之初，对字符编码概念及原理不够理解，本文用于整理记录关于字符编码的知识。</p>
<h3 id="二、基础概念"><a href="#二、基础概念" class="headerlink" title="二、基础概念"></a>二、基础概念</h3><p>要弄清字符编码，首先需要知道什么是字符集。从名字来知道字符集就是所有字符构成的集合。<br>以下摘自维基百科：</p>
<blockquote>
<p><strong>字符</strong>是各种文字和符号的总称，包括各个国家文字、标点符号、图形符号、数字等等。<br><strong>字符集</strong>是多个字符的集合。字符集种类很多，常见的字符集有：ASCII、GBK、Unicode、BIG5等<br><strong>字符编码</strong>（英语：Character encoding）也称字集码，是把字符集中的字符编码为指定集合中某一对象（例如：比特模式、自然数序列、8位组或者电脉冲），以便文本在计算机中存储和通过通信网络的传递。</p>
</blockquote>
<h3 id="三、常见的字符编码"><a href="#三、常见的字符编码" class="headerlink" title="三、常见的字符编码"></a>三、常见的字符编码</h3><h4 id="1-ASCII"><a href="#1-ASCII" class="headerlink" title="1.ASCII"></a>1.ASCII</h4><p>计算机最早由老外发明，因此最早的ASCII编码只考虑到了英文字母的表示，</p>
<ul>
<li>字符集：英文字母、数字、标点、控制字符（回车，制表符等）</li>
<li>编码集：由于这些字符数量有限，它的编码集也很小，只需要0-127的整数就可以表示</li>
<li>编码方案：存储这些编码也很简单，只需要一个字节，即将字符的编码直接转化为一个字节的二进制数据即可<br>比如字符A的编码值为65，二进制存储为01000001<h4 id="2-GBK"><a href="#2-GBK" class="headerlink" title="2.GBK"></a>2.GBK</h4>中文博大精深，中文字符也远远多于英文字符，这样长度只有一个字节的ascii编码就无法表示数量庞大的中文字符，于是就有了gb系列的编码，其中gbk是gb系列编码的扩展</li>
<li>字符集：ascii字符＋中文</li>
<li>编码集：每个字符用两个字节表示，编码集为0-65535（没有完全覆盖），理论上最多可以表示65536个字符，这可以表示绝大多数汉字</li>
<li>编码方案：ascii字符保持不变，用一个字节表示，中文字符用两个字节表示，第一字节的范围是81–FE，第二字节的一部分领域在40–7E，其他领域在80–FE<br>比如“中”编码值为54992，十六进制为0xD6D0。GBK兼容ascii编码，事实上所有编码都兼容ascii编码。另外微软的CP936编码被视为等同于GBK<h4 id="3-Unicode"><a href="#3-Unicode" class="headerlink" title="3.Unicode"></a>3.Unicode</h4>中文的编码是解决了，但是其它语言的编码怎么办呢，总不能每个国家都搞一套编码方案吧，而且在互联网时代，很多信息都是共享的，于是需要一种能表示所有字符的编码方案，Unicode就是这样的</li>
<li>字符集：所有语言的所有字符</li>
<li>编码集：unicode是一个很大的集合，可以表示100多万个符号，最长可用4个字节表示一个符号</li>
<li>编码方案：unicode只是规定了每个符号的二进制表示，并没有规定如何存储<br>比如“中”的Unicode编码为十六进制0x4E2D，需要用两个字节来表示，有些字符可能需要3个甚至4个字节来表示，如果都采用定长编码，就会造成存储空间的极大浪费，因为我们知道英文字符只需要一个字节就能表示，于是便有了对Unicode的不同实现方案，目前最广泛使用的就是UTF-8<h4 id="4-UTF-8"><a href="#4-UTF-8" class="headerlink" title="4.UTF-8"></a>4.UTF-8</h4>UTF-8是对Unicode的一种实现方案，是一种可变长字符编码，也就是说它先基于Unicode编码将字符表示成一个二进制，然后采用一种方式去存储这串二进制，它的规则也很简单</li>
<li><p>对于单字节的符号，字节的第一位设为0，后面7位为这个符号的Unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的</p>
</li>
<li><p>对于n字节的符号（n&gt;1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10，剩下的没有提及的二进制位，全部为这个符号的Unicode码<br>具体编码规则如下</p>
<p><img src="http://i2.buimg.com/1949/351e41a4022bd2b6.png" alt="Markdown"></p>
<p>举个例子，字符A的Unicode值为01000001，其UTF-8编码仍旧为01000001，汉字“中”的Unicode编码为0x4E2D(01001110 00101101)，在第三行的范围内，需要用三个字节表示，其UTF-8编码值格式为1110xxxx 10xxxxxx 10xxxxxx，其中x为从最右边开始填入的unicode编码二进制，不够的补0，得到11100100 10111000 10101101</p>
</li>
</ul>
<p>UTF-8有两个主要优点，第一是变长编码，在能表示足够大的字符集的前提下减少了存储空间，第二是采用前缀编码，即任何一个字符的编码都不是另一个字符编码的前缀，这样的好处是在网络传输过程中如果丢失了一个字节，可以判断出这个字节所在字符的编码边界，只会影响这个字符的显示，而不会影响其后面的字符，这不同于GBK这种非前缀编码，GBK每个汉字用两个字节编码，如果丢失一个字节，剩下的一个字节和后面字符的第一个字节可以组成一个新的字符，这样后续的所有字符都错乱了。</p>
]]></content>
      
        <categories>
            
            <category> HTTP </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 字符集 </tag>
            
            <tag> 字符编码 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何使用 GitHub Pages 预览页面]]></title>
      <url>https://achingsoul.github.io/2017/03/23/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-GitHub-Pages-%E9%A2%84%E8%A7%88%E9%A1%B5%E9%9D%A2/</url>
      <content type="html"><![CDATA[<p>为了能预览GitHub上的页面，GitHub推出了 GitHub Pages 功能，以下是设置GitHub Pages的步骤： </p>
<h2 id="1-登入GitHub，点击New-repository"><a href="#1-登入GitHub，点击New-repository" class="headerlink" title="1.登入GitHub，点击New repository"></a>1.登入GitHub，点击New repository</h2><p><img src="http://upload-images.jianshu.io/upload_images/4730821-71a348b1fde9f019.png?imageMogr2/auto-orient/strip" alt=""></p>
<h2 id="2-点击Create-repository"><a href="#2-点击Create-repository" class="headerlink" title="2.点击Create repository"></a>2.点击Create repository</h2><p><img src="http://upload-images.jianshu.io/upload_images/4730821-5ce8e7d51934b1bb.png?imageMogr2/auto-orient/strip" alt=""></p>
<h2 id="3-进入「settings」页面："><a href="#3-进入「settings」页面：" class="headerlink" title="3.进入「settings」页面："></a>3.进入「settings」页面：</h2><p><img src="http://upload-images.jianshu.io/upload_images/4730821-fef2cb519964845f.png?imageMogr2/auto-orient/strip" alt=""></p>
<h2 id="4-开启-GitHub-Pages-功能，得到一个「预览地址」，我的「预览地址」是-https-achingsoul-github-io-demos"><a href="#4-开启-GitHub-Pages-功能，得到一个「预览地址」，我的「预览地址」是-https-achingsoul-github-io-demos" class="headerlink" title="4.开启 GitHub Pages 功能，得到一个「预览地址」，我的「预览地址」是 https://achingsoul.github.io/demos/"></a>4.开启 GitHub Pages 功能，得到一个「预览地址」，我的「预览地址」是 <a href="https://achingsoul.github.io/demos/">https://achingsoul.github.io/demos/</a></h2><p><img src="http://upload-images.jianshu.io/upload_images/4730821-fef2cb519964845f.png?imageMogr2/auto-orient/strip" alt=""></p>
<h2 id="5-以后你就用这个「预览地址」来预览你的-html，比如你的-html-路径是-demos-test-html，那么预览链接就是："><a href="#5-以后你就用这个「预览地址」来预览你的-html，比如你的-html-路径是-demos-test-html，那么预览链接就是：" class="headerlink" title="5.以后你就用这个「预览地址」来预览你的 html，比如你的 html 路径是 demos/test.html，那么预览链接就是："></a>5.以后你就用这个「预览地址」来预览你的 html，比如你的 html 路径是 demos/test.html，那么预览链接就是：</h2><p><a href="https://achingsoul.github.io/demos/test.html">https://achingsoul.github.io/demos/test.html</a></p>
<h3 id="步骤如下："><a href="#步骤如下：" class="headerlink" title="步骤如下："></a>步骤如下：</h3><ul>
<li>新建test.html</li>
</ul>
<p><img src="http://upload-images.jianshu.io/upload_images/4730821-4760c096c4f82d90.png?imageMogr2/auto-orient/strip" alt=""></p>
<p><img src="http://upload-images.jianshu.io/upload_images/4730821-916810aeedd24fc5.png?imageMogr2/auto-orient/strip" alt=""></p>
<ul>
<li>在浏览器输入<a href="https://achingsoul.github.io/demos/test.html">https://achingsoul.github.io/demos/test.html</a></li>
</ul>
<p>这样，你就能自己随时预览 GitHub 里的页面了！</p>
]]></content>
      
        <categories>
            
            <category> 教程 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> github </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://achingsoul.github.io/2017/03/11/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
